name: CI
on:
  push:
    branches:
      - main
      - lch-testsuite
  pull_request:
    branches:
      - main
env:
  JS_DIR: js_dir
  LL_DIR: ll_dir
  TS_DIR: test

jobs:
  install:
    name: Install environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup npm cache
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.3'
          cache: 'npm'
      - name: Install LLVM
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update -qq
          sudo apt-get install libllvm13 llvm-13 llvm-13-dev
      - name: Install dependencies
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_PUBLISH_TOKEN
          npm config set cmake_LLVM_DIR=$(/usr/bin/llvm-config-13 --cmakedir)
          npm install
  tsc_compile:
    name: Compile test cases in typescript to javascript
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup npm cache
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.3'
          cache: 'npm'
      - name: Install dependencies
        run: npm install --ignore-scripts
      - name: Compile test cases
        run: ./scripts/tsc_compilation.py --outDir $JS_DIR $TS_DIR

  tsll_compile:
    name: Compile test cases in typescript to LLVM IR
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup npm cache
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.3'
          cache: 'npm'
      - name: Install dependencies
        run: npm install --ignore-scripts
      - name: Compile test cases
        run: ./scripts/tsll_compilation.py --outDir $LL_DIR $TS_DIR
  
  test:
    name: Run unit tests against code
    needs: [tsc_compile, tsll_compile]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup npm cache
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.3'
          cache: 'npm'
      - name: Install LLVM
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update -qq
          sudo apt-get install libllvm13 llvm-13 llvm-13-dev
      - name: Install dependencies
        run: |
          npm config set cmake_LLVM_DIR=$(/usr/bin/llvm-config-13 --cmakedir)
          npm install
      - name: Test code changes
        run: |
          npm test
          ./scripts/test_runner.py --jsDir $JS_DIR --llDir $LL_DIR

  
  publish:
    name: Publish this npm project
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup npm cache
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.3'
          cache: 'npm'
      - name: Install dependencies
        run: npm install --ignore-scripts
      - name: Build a lib and bin
        run: npm run build
      - name: Publish pacakge
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_PUBLISH_TOKEN
          npm publish --access public
